@RestResource(urlMapping='/cuidarnos/rest/pilar/contact/*')
global without sharing class Cuidarnos_Pilar_ContactInfo_API {
    @HttpGet 
    global static void retrieveContactInfo() {
        RemotingMessageHelper.CuidarnosPilarCovidCuitificacion objResponse = null;
        RemotingMessageHelper.CountRecordsRespose objResponseError = null;
        RestRequest objRESTRequest = null;
        RestResponse objRESTResponse = null;
        List<Contact> lstContacts = null;
        List<String> lstString = null;
        String strUrl = null;
        String strDocumentNumber = null;
        String strGender = null;
        Contact objContact = null;
        CitizenWrapper objCitizenWrapper = null;

        System.debug('retrieveContactInfo [ request : ' + RestContext.request + ' ] -> ');
        
        try  {
            objRESTRequest = RestContext.request;
            objRESTResponse = RestContext.response;   
            objRESTResponse.addHeader('Content-Type', 'application/json');
            strUrl = objRESTRequest.requestURI;
            
            System.debug('retrieveContactInfo [ strUrl : ' + strUrl + ' ]');

            if(strUrl.endsWith('/')) {
                strUrl = strUrl.removeEnd('/');
            } 
            lstString = strUrl.split('/');
            strDocumentNumber = lstString[lstString.size() - 2];
            strGender = lstString[lstString.size() - 1];

            if(String.isNotBlank(strDocumentNumber)) {
                if(String.isBlank(strGender)) {
                    System.debug('retrieveContactInfo [ querying with null sex]');

                    lstContacts = [ SELECT Id 
                                    FROM Contact 
                                    WHERE Document_Number__c =: strDocumentNumber
                                    LIMIT 1];                                     
                } else {
                    System.debug('retrieveContactInfo [ querying with sex]');

                    lstContacts = [ SELECT Id
                                    FROM Contact 
                                    WHERE Document_Number__c =: strDocumentNumber
                                    AND Gender__c =: strGender
                                    LIMIT 1];
                }

                if(lstContacts.size() == 1) {
                    objContact = ContactDetailController.retrieveContactFromId(lstContacts[0].Id);

                    if(objContact != NULL) {      
                        objCitizenWrapper = new CitizenWrapper(objContact);

                        objResponse = new RemotingMessageHelper.CuidarnosPilarCovidCuitificacion();
                        objResponse.nombre = String.format('{0} {1} {2}', new String[] { String.isNotBlank( objCitizenWrapper.citizen.FirstName)? objCitizenWrapper.citizen.FirstName:'', String.isNotBlank( objCitizenWrapper.citizen.MiddleName)? objCitizenWrapper.citizen.MiddleName:'', String.isNotBlank( objCitizenWrapper.citizen.LastName)? objCitizenWrapper.citizen.LastName:''  });
                        //objResponse.email = objCitizenWrapper.cuidarnos.email;
                        objResponse.dni = String.isNotBlank(objCitizenWrapper.citizen.Document_Number__c)?Integer.valueOf(objCitizenWrapper.citizen.Document_Number__c):null ;

                        objResponse.fecha_covid = objCitizenWrapper.cuidarnos.Resultado;
                        objResponse.fecha_nacimiento = objCitizenWrapper.generalInfo.BirthdateSPFormat;
                        objResponse.estado = objCitizenWrapper.cuidarnos.status;
                        objResponse.sexo = objCitizenWrapper.generalInfo.Gender;
                        objResponse.alta_epidemeologica = objCitizenWrapper.cuidarnos.covid.Estado_Epidemiologico__c;
                        
                        objRESTResponse.statusCode = 200;
                        objRESTResponse.responseBody = Blob.valueOf(JSON.serialize(objResponse));    
    
                    }
                 } else {
                    objResponseError = new RemotingMessageHelper.CountRecordsRespose();
                    objResponseError.code = 100;
                    objResponseError.message = 'No se han encontrado resultados';

                    objRESTResponse.statusCode = 400; 
                    objRESTResponse.responseBody = Blob.valueOf(JSON.serialize(objResponseError));   
                }
            } else {                
                objResponseError = new RemotingMessageHelper.CountRecordsRespose();
                objResponseError.code = 110;
                objResponseError.message = Label.API_Invalid_Request;

                objRESTResponse.statusCode = 400; 
                objRESTResponse.responseBody = Blob.valueOf(JSON.serialize(objResponseError));   
        
            }
        } catch(Exception Ex) {
            objResponseError = new RemotingMessageHelper.CountRecordsRespose();
            objResponseError.code = 999;
            objResponseError.message = Label.API_Invalid_Request;

            objRESTResponse.statusCode = 500; 
            objRESTResponse.responseBody = Blob.valueOf(JSON.serialize(objResponseError));
        }
        
        System.debug('retrieveContactInfo [ statusCode : ' + objRESTResponse.statusCode + ' ]');
        System.debug('retrieveContactInfo [ responseBody : ' + objRESTResponse.responseBody + ' ]');
        System.debug('retrieveContactInfo [] <- ');
    }

    public static void noqueriahaceresto() {
        Integer intI = 1;
         
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;        
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;        
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
    }
}