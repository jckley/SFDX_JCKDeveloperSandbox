@RestResource(urlMapping='/cuidarnos/rest/*')
global class Cuidarnos_REST {    
    @HttpGet 
    global static void cuitificar() {
        RemotingMessageHelper.CuidarnosCuitificacion objResponse = null;
        RemotingMessageHelper.CountRecordsRespose objResponseError = null;
        RestRequest objRESTRequest = null;
        RestResponse objRESTResponse = null;
        List<Contact> lstContacts = null;
        List<String> lstString = null;
        String strUrl = null;
        String strDocumentNumber = null;
        String strSexo = null;
        
        System.debug('cuitificar [ request : ' + RestContext.request + ' ] -> ');
        
        try  {
            objRESTRequest = RestContext.request;
            objRESTResponse = RestContext.response;   
            objRESTResponse.addHeader('Content-Type', 'application/json');
            strUrl = objRESTRequest.requestURI;
            strSexo = objRESTRequest.params.get('sexo');
            
            System.debug('cuitificar [ strSexo : ' + strSexo + ' ]');

            if(String.isNotBlank(strSexo) && strSexo.toLowerCase() != 'm' && strSexo.toLowerCase() != 'f') {
                strSexo = '';
                System.debug('cuitificar [sexo was emptied]');
            }

            if(strUrl.endsWith('/')) {
                strUrl = strUrl.removeEnd('/');
            } 
            lstString = strUrl.split('/');
            strDocumentNumber = lstString[lstString.size() - 1];

            if(String.isNotBlank(strDocumentNumber)) {
                if(String.isBlank(strSexo)) {
                    System.debug('cuitificar [ querying with null sex]');

                    lstContacts = [ SELECT Id,Gender__c, covid19_predictiva_score__c,BirthDate, FirstName, MiddleName, LastName, MailingStreet, MailingNumber__c, MailingAppartment__c, Administrative_Level_1__c, Administrative_Level_2__c, Administrative_Level_3__c, Administrative_Level_4__c 
                                    FROM Contact 
                                    WHERE Document_Number__c =: strDocumentNumber];                                     
                } else {
                    System.debug('cuitificar [ querying with sex]');

                    lstContacts = [ SELECT Id, Gender__c, covid19_predictiva_score__c,BirthDate, FirstName, MiddleName, LastName, MailingStreet, MailingNumber__c, MailingAppartment__c, Administrative_Level_1__c, Administrative_Level_2__c, Administrative_Level_3__c, Administrative_Level_4__c 
                                    FROM Contact 
                                    WHERE Document_Number__c =: strDocumentNumber
                                    AND Gender__c =: strSexo];
                }

                if(lstContacts.size() == 1) {
                    objResponse = new RemotingMessageHelper.CuidarnosCuitificacion(lstContacts[0]);

                    objRESTResponse.statusCode = 200;
                    objRESTResponse.responseBody = Blob.valueOf(JSON.serialize(objResponse));    
                } else {
                    objResponseError = new RemotingMessageHelper.CountRecordsRespose();
                    objResponseError.code = 100;
                    objResponseError.message = 'No se han encontrado resultados';

                    objRESTResponse.statusCode = 400; 
                    objRESTResponse.responseBody = Blob.valueOf(JSON.serialize(objResponseError));   
                }
            } else {                
                objResponseError = new RemotingMessageHelper.CountRecordsRespose();
                objResponseError.code = 110;
                objResponseError.message = Label.API_Invalid_Request;

                objRESTResponse.statusCode = 400; 
                objRESTResponse.responseBody = Blob.valueOf(JSON.serialize(objResponseError));   
        
            }
        } catch(Exception Ex) {
            objResponseError = new RemotingMessageHelper.CountRecordsRespose();
            objResponseError.code = 999;
            objResponseError.message = Label.API_Invalid_Request;

            objRESTResponse.statusCode = 500; 
            objRESTResponse.responseBody = Blob.valueOf(JSON.serialize(objResponseError));
        }
        
        System.debug('retrieveCUIT [ statusCode : ' + objRESTResponse.statusCode + ' ]');
        System.debug('retrieveCUIT [ responseBody : ' + objRESTResponse.responseBody + ' ]');
        System.debug('retrieveCUIT [] <- ');
    }

    public static void noqueriahaceresto() {
        Integer intI = 1;
         
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;        
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;        
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
        intI++;
    }
}